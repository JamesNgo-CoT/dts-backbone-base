{"version":3,"sources":["script.min.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","Backbone","Model","Base","extend","attributeTypes","initialize","_this","this","on","model","changedAttributes","previousAttributes","_loop","k","hasOwnProperty","stopListening","Collection","listenTo","opts","trigger","set","attrs","arguments","Function","bind","apply","Boolean","concat","valueOf","Number","String","call","View"],"mappings":"AAAA,aAEA,IAAIA,QAA4B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAwB,SAAUC,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,mBAAXF,QAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,gBAAkBF,GAEtQ,SAASG,mBAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,IAAIG,EAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,GAAM,OAAOC,EAAe,OAAOH,MAAMK,KAAKN,GAE1L,SAASO,gBAAgBX,EAAKY,EAAKC,GAAiK,OAApJD,KAAOZ,EAAOc,OAAOC,eAAef,EAAKY,GAAOC,MAAOA,EAAOG,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBlB,EAAIY,GAAOC,EAAgBb,EAI3MmB,SAASC,MAAMC,KAAOF,SAASC,MAAME,QACnCC,kBAEAC,WAAY,WACV,IAAIC,EAAQC,KAEZA,KAAKC,GAAG,SAAU,SAAUC,GAG1B,GAAIH,IAAUG,EAAO,CACnB,IAAIC,EAAoBJ,EAAMI,oBAC1BC,EAAqBL,EAAMK,qBAE3BC,EAAQ,SAAeC,GAGrBF,EAAmBG,eAAeD,IAAMF,EAAmBE,KACzDF,EAAmBE,aAAcb,SAASC,OAC5CK,EAAMS,cAAcJ,EAAmBE,GAAI,UAC3CP,EAAMS,cAAcJ,EAAmBE,GAAI,UAAYA,IAC9CF,EAAmBE,aAAcb,SAASgB,YACnDV,EAAMS,cAAcJ,EAAmBE,GAAI,WAK3CH,EAAkBI,eAAeD,IAAMH,EAAkBG,KACvDH,EAAkBG,aAAcb,SAASC,MAC3CK,EAAMW,SAASP,EAAkBG,GAAI,SAAU,SAAUJ,EAAOS,GAC9DZ,EAAMa,QAAQ,SAAUV,EAAOS,GAC/BZ,EAAMa,QAAQ,UAAYN,EAAGP,EAAOG,EAAOS,KAEpCR,EAAkBG,aAAcb,SAASgB,YAClDV,EAAMW,SAASP,EAAkBG,GAAI,SAAU,gBAKrD,IAAK,IAAIA,KAAKH,EACZE,EAAMC,OAMdO,IAAK,SAAaC,EAAOH,GASvB,GANqB,iBAAVG,IACTA,EAAQ7B,mBAAoB6B,EAAOH,GACnCA,EAAOI,UAAU,QAIff,KAAKH,gBAAmD,WAAjC1B,QAAQ6B,KAAKH,gBACtC,IAAK,IAAIS,KAAKN,KAAKH,eACjB,GAAIG,KAAKH,eAAeU,eAAeD,IAAMN,KAAKH,eAAeS,IAAMQ,EAAMP,eAAeD,IAAMQ,EAAMR,GAAI,CAI1G,IAAInB,EAAQR,MAAMC,QAAQkC,EAAMR,IAAMQ,EAAMR,IAAMQ,EAAMR,IAExD,GAAsC,iBAA3BN,KAAKH,eAAeS,GAC7B,OAAQnB,GACN,IAAK,UACH2B,EAAMR,IAAK,IAAKU,SAASxC,UAAUyC,KAAKC,MAAMC,SAAU,MAAMC,OAAO3C,mBAAmBU,OAAYkC,UACpG,MAEF,IAAK,SACHP,EAAMR,IAAK,IAAKU,SAASxC,UAAUyC,KAAKC,MAAMI,QAAS,MAAMF,OAAO3C,mBAAmBU,OAAYkC,UACnG,MAEF,IAAK,SACHP,EAAMR,IAAK,IAAKU,SAASxC,UAAUyC,KAAKC,MAAMK,QAAS,MAAMH,OAAO3C,mBAAmBU,OAAYkC,UACnG,MAEF,IAAK,WACHP,EAAMR,GAAK,IAAKU,SAASxC,UAAUyC,KAAKC,MAAMF,UAAW,MAAMI,OAAO3C,mBAAmBU,UAGnE,mBAAVA,IAChB2B,EAAMR,GAAK,IAAKU,SAASxC,UAAUyC,KAAKC,MAAMlB,KAAKH,eAAeS,IAAK,MAAMc,OAAO3C,mBAAmBU,OAM/GM,SAASC,MAAMlB,UAAUqC,IAAIW,KAAKxB,KAAMc,EAAOH,MAMnDlB,SAASgB,WAAWd,KAAOF,SAASgB,WAAWb,WAI/CH,SAASgC,KAAK9B,KAAOF,SAASgC,KAAK7B","file":"script.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global Backbone */\n\nBackbone.Model.Base = Backbone.Model.extend({\n  attributeTypes: {},\n\n  initialize: function initialize() {\n    var _this = this;\n\n    this.on('change', function (model) {\n\n      // Only mange changes that belong to itself.\n      if (_this === model) {\n        var changedAttributes = _this.changedAttributes();\n        var previousAttributes = _this.previousAttributes();\n\n        var _loop = function _loop(k) {\n\n          // Stop listening.\n          if (previousAttributes.hasOwnProperty(k) && previousAttributes[k]) {\n            if (previousAttributes[k] instanceof Backbone.Model) {\n              _this.stopListening(previousAttributes[k], 'change');\n              _this.stopListening(previousAttributes[k], 'change:' + k);\n            } else if (previousAttributes[k] instanceof Backbone.Collection) {\n              _this.stopListening(previousAttributes[k], 'update');\n            }\n          }\n\n          // Start listening.\n          if (changedAttributes.hasOwnProperty(k) && changedAttributes[k]) {\n            if (changedAttributes[k] instanceof Backbone.Model) {\n              _this.listenTo(changedAttributes[k], 'change', function (model, opts) {\n                _this.trigger('change', model, opts);\n                _this.trigger('change:' + k, _this, model, opts);\n              });\n            } else if (changedAttributes[k] instanceof Backbone.Collection) {\n              _this.listenTo(changedAttributes[k], 'update', function () {});\n            }\n          }\n        };\n\n        for (var k in changedAttributes) {\n          _loop(k);\n        }\n      }\n    });\n  },\n\n  set: function set(attrs, opts) {\n\n    // Format arguments to remove variations.\n    if (typeof attrs === 'string') {\n      attrs = _defineProperty({}, attrs, opts);\n      opts = arguments[2] || {};\n    }\n\n    // Format attribute values based on attibute types extention property.\n    if (this.attributeTypes && _typeof(this.attributeTypes) === 'object') {\n      for (var k in this.attributeTypes) {\n        if (this.attributeTypes.hasOwnProperty(k) && this.attributeTypes[k] && attrs.hasOwnProperty(k) && attrs[k]) {\n\n          // Format value into array for spread operator when providing\n          // arguments to constructors.\n          var value = Array.isArray(attrs[k]) ? attrs[k] : [attrs[k]];\n\n          if (typeof this.attributeTypes[k] === 'string') {\n            switch (value) {\n              case 'boolean':\n                attrs[k] = new (Function.prototype.bind.apply(Boolean, [null].concat(_toConsumableArray(value))))().valueOf();\n                break;\n\n              case 'number':\n                attrs[k] = new (Function.prototype.bind.apply(Number, [null].concat(_toConsumableArray(value))))().valueOf();\n                break;\n\n              case 'string':\n                attrs[k] = new (Function.prototype.bind.apply(String, [null].concat(_toConsumableArray(value))))().valueOf();\n                break;\n\n              case 'function':\n                attrs[k] = new (Function.prototype.bind.apply(Function, [null].concat(_toConsumableArray(value))))();\n                break;\n            }\n          } else if (typeof value === 'function') {\n            attrs[k] = new (Function.prototype.bind.apply(this.attributeTypes[k], [null].concat(_toConsumableArray(value))))();\n          }\n        }\n      }\n    }\n\n    Backbone.Model.prototype.set.call(this, attrs, opts);\n  }\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackbone.Collection.Base = Backbone.Collection.extend({});\n\n////////////////////////////////////////////////////////////////////////////////\n\nBackbone.View.Base = Backbone.View.extend({});"]}